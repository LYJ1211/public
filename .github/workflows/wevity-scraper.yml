name: 공모전 알림 (5분 반복)

on:
  workflow_dispatch:
  push:                         # ← 이 파일 바뀔 때 한 번 실행되게
    paths:
      - ".github/workflows/wevity-scraper.yml"

permissions:
  contents: write
  actions: write                # ← 나중에 dispatch 등 쓸 때 유용

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 7
    concurrency:
      group: wevity-scraper
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # ⏱ 시작 시각 기록 + 로그 출력
      - name: Mark start time
        id: started
        run: |
          echo "ts=$(date +%s)" >> $GITHUB_OUTPUT
          echo "kst=$(TZ=Asia/Seoul date '+%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_OUTPUT
          echo "▶ Started at (KST): $(TZ=Asia/Seoul date '+%Y-%m-%d %H:%M:%S %Z')"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 cloudscraper

      - name: Run scraper
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_PAT:       ${{ secrets.GH_PAT }}
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_IDS:  ${{ secrets.TG_CHAT_IDS }}
        run: python main.py

      # ⏹ 종료 시각/소요시간 출력 + Job Summary에 기록
      - name: Show end-time & duration
        if: always()
        env:
          START_TS:  ${{ steps.started.outputs.ts }}
          START_KST: ${{ steps.started.outputs.kst }}
        run: |
          END_TS=$(date +%s)
          D=$(( END_TS - START_TS ))
          MM=$(( D / 60 ))
          SS=$(( D % 60 ))
          echo "⏹ Ended at (KST): $(TZ=Asia/Seoul date '+%Y-%m-%d %H:%M:%S %Z')"
          echo "⏱ Duration: ${MM}m ${SS}s"

          {
            echo "## wevity-scraper run"
            echo ""
            echo "- Start (KST): ${START_KST}"
            echo "- End (KST): $(TZ=Asia/Seoul date '+%Y-%m-%d %H:%M:%S %Z')"
            echo "- Duration: ${MM}m ${SS}s"
          } >> "$GITHUB_STEP_SUMMARY"
